name: BuildAndReleaseMasterTest
on: [workflow_dispatch]
# on:
#   push:
#     tags:
#       - "*"

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    env:
      PUBLISH_FOR_PULL_REQUEST: true
      CSC_FOR_PULL_REQUEST: true
    steps:
      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          prerelease: true
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
  build_release_arm64:
    name: Build release
    needs: create_release
    runs-on: ubuntu-latest
    container:
      image: docker.io/itsmesamster/test_repo:latest
      env:
        MIX_ENV: test
      credentials:
         username: ${{ secrets.DOCKER_USERNAME }}
         password: ${{ secrets.DOCKER_PASSWORD }}
      ports:
        - 5000
      volumes:
        - my_docker_volume:/volume_mount
      options: --cpus 1 --platform linux/arm64
    steps:
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3
      #   with:
      #     platforms: arm64, amd64
      - name: run docker
        run: docker run docker.io/itsmesamster/test_repo:latest
      - name: Checkout
        uses: actions/checkout@v3
      - name: list release files
        working-directory: ${{ github.workspace }}/application/holder
        run: ls
      - name: Run commands
        run:  |
          pwd
          ls -la
          export DOCKER_DEFAULT_PLATFORM=linux/arm64
          cd ./application/holder
          rake release:prod --trace
          ls -la
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - uses: addnab/docker-run-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     registry: docker.io
      #     image: itsmesamster/test_repo:latest
      #     options: --platform linux/arm64 -v ${{ github.workspace }}:/var/www
      #     run:  |
      #       pwd
      #       ls -la
      #       export DOCKER_DEFAULT_PLATFORM=linux/arm64
      #       cd ./application/holder
      #       rake release:prod --trace
      #       ls -la
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: list release files
        working-directory: ${{ github.workspace }}/application/holder/release
        run: ls
      - name: upload files
        if: startsWith(github.ref, 'refs/tags/')
        uses: AButler/upload-release-assets@v2.0
        with:
          files: "${{ github.workspace }}/application/holder/release/*.tgz;${{ github.workspace }}/application/holder/release/*.zip"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # create_release:
  #   name: Create release
  #   runs-on: ubuntu-latest
  #   outputs:
  #     upload_url: ${{ steps.create_release.outputs.upload_url }}
  #   env:
  #     PUBLISH_FOR_PULL_REQUEST: true
  #     CSC_FOR_PULL_REQUEST: true
  #   steps:
  #     - name: Release
  #       if: startsWith(github.ref, 'refs/tags/')
  #       id: create_release
  #       uses: softprops/action-gh-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         prerelease: true
  #         tag_name: ${{ github.ref_name }}
  #         name: ${{ github.ref_name }}
  # build_release:
  #   name: Build release
  #   needs: create_release
  #   runs-on: ${{ matrix.os }}
  #   env:
  #     PUBLISH_FOR_PULL_REQUEST: 1
  #     CSC_FOR_PULL_REQUEST: true
  #   strategy:
  #     matrix:
  #       os: [ubuntu-20.04]
  #       rust: [stable]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: libudev-dev
  #       if: runner.os == 'Linux'
  #       run: sudo apt-get install -y libudev-dev
  #     - name: install ruby
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: "3.0"
  #         bundler-cache: true
  #     - name: install ruby:gem::dotenv
  #       run: gem install dotenv
  #     - name: install ruby:gem::json
  #       run: gem install json
  #     - name: install node
  #       uses: actions/setup-node@master
  #       with:
  #         node-version: "current"
  #     - name: install rust
  #       uses: hecrj/setup-rust-action@v1
  #       with:
  #         rust-version: ${{ matrix.rust }}
  #     - name: cargo install nj-cli
  #       run: cargo install nj-cli
  #     - name: install wasm-pack
  #       run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
  #     - name: build release
  #       working-directory: ./application/holder
  #       run: rake release:prod --trace
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     - name: list release files
  #       working-directory: ./application/holder/release
  #       run: ls
  #     - name: upload files
  #       if: startsWith(github.ref, 'refs/tags/')
  #       uses: AButler/upload-release-assets@v2.0
  #       with:
  #         files: "./application/holder/release/*.tgz;./application/holder/release/*.zip"
  #         repo-token: ${{ secrets.GITHUB_TOKEN }}
  #         release-tag: ${{ github.ref_name }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}